Loading...........
Kernel command line: -q run threads_audit
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  48,640,000 loops/s.
Boot complete.
Executing 'threads_audit':
(threads_audit) begin
(threads_audit) Lets start show
(threads_audit) ---Thread 9 statistics---
(threads_audit) Start in 35
(threads_audit) Time of work 201
(threads_audit) End in 237
(threads_audit) ---end statistics---
(threads_audit) ---Thread 8 statistics---
(threads_audit) Start in 35
(threads_audit) Time of work 151
(threads_audit) End in 187
(threads_audit) ---end statistics---
(threads_audit) ---Thread 7 statistics---
(threads_audit) Start in 35
(threads_audit) Time of work 101
(threads_audit) End in 137
(threads_audit) ---end statistics---
(threads_audit) ---Thread 6 statistics---
(threads_audit) Start in 35
(threads_audit) Time of work 51
(threads_audit) End in 87
(threads_audit) ---end statistics---
(threads_audit) ---Thread 5 statistics---
(threads_audit) Start in 35
(threads_audit) Time of work 0
(threads_audit) End in 36
(threads_audit) ---end statistics---
(threads_audit) ---Thread 4 statistics---
(threads_audit) Start in 35
(threads_audit) Time of work 200
(threads_audit) End in 236
(threads_audit) ---end statistics---
(threads_audit) ---Thread 3 statistics---
(threads_audit) Start in 35
(threads_audit) Time of work 150
(threads_audit) End in 186
(threads_audit) ---end statistics---
(threads_audit) ---Thread 2 statistics---
(threads_audit) Start in 35
(threads_audit) Time of work 100
(threads_audit) End in 136
(threads_audit) ---end statistics---
(threads_audit) ---Thread 1 statistics---
(threads_audit) Start in 35
(threads_audit) Time of work 50
(threads_audit) End in 86
(threads_audit) ---end statistics---
(threads_audit) ---Thread 0 statistics---
(threads_audit) Start in 35
(threads_audit) Time of work 0
(threads_audit) End in 36
(threads_audit) ---end statistics---
(threads_audit) end
Execution of 'threads_audit' complete.
Timer: 297 ticks
Thread: 200 idle ticks, 97 kernel ticks, 0 user ticks
Console: 2076 characters output
Keyboard: 0 keys pressed
Powering off...




(max_mem) End with 366 times


(alarm-single) begin
(alarm-single) Creating 5 threads to sleep 1 times each.
(alarm-single) Thread 0 sleeps 10 ticks each time,
(alarm-single) thread 1 sleeps 20 ticks each time, and so on.
(alarm-single) If successful, product of iteration count and
(alarm-single) sleep duration will appear in nondescending order.
(alarm-single) thread 0: duration=10, iteration=1, product=10
(alarm-single) thread 1: duration=20, iteration=1, product=20
(alarm-single) thread 2: duration=30, iteration=1, product=30
(alarm-single) thread 3: duration=40, iteration=1, product=40
(alarm-single) thread 4: duration=50, iteration=1, product=50
(alarm-single) end


(alarm-multiple) begin
(alarm-multiple) Creating 5 threads to sleep 7 times each.
(alarm-multiple) Thread 0 sleeps 10 ticks each time,
(alarm-multiple) thread 1 sleeps 20 ticks each time, and so on.
(alarm-multiple) If successful, product of iteration count and
(alarm-multiple) sleep duration will appear in nondescending order.
(alarm-multiple) thread 0: duration=10, iteration=1, product=10
(alarm-multiple) thread 1: duration=20, iteration=1, product=20
(alarm-multiple) thread 0: duration=10, iteration=2, product=20
(alarm-multiple) thread 2: duration=30, iteration=1, product=30
(alarm-multiple) thread 0: duration=10, iteration=3, product=30
(alarm-multiple) thread 1: duration=20, iteration=2, product=40
(alarm-multiple) thread 3: duration=40, iteration=1, product=40
(alarm-multiple) thread 0: duration=10, iteration=4, product=40
(alarm-multiple) thread 4: duration=50, iteration=1, product=50
(alarm-multiple) thread 0: duration=10, iteration=5, product=50
(alarm-multiple) thread 1: duration=20, iteration=3, product=60
(alarm-multiple) thread 2: duration=30, iteration=2, product=60
(alarm-multiple) thread 0: duration=10, iteration=6, product=60
(alarm-multiple) thread 0: duration=10, iteration=7, product=70
(alarm-multiple) thread 1: duration=20, iteration=4, product=80
(alarm-multiple) thread 3: duration=40, iteration=2, product=80
(alarm-multiple) thread 2: duration=30, iteration=3, product=90
(alarm-multiple) thread 4: duration=50, iteration=2, product=100
(alarm-multiple) thread 1: duration=20, iteration=5, product=100
(alarm-multiple) thread 3: duration=40, iteration=3, product=120
(alarm-multiple) thread 2: duration=30, iteration=4, product=120
(alarm-multiple) thread 1: duration=20, iteration=6, product=120
(alarm-multiple) thread 1: duration=20, iteration=7, product=140
(alarm-multiple) thread 2: duration=30, iteration=5, product=150
(alarm-multiple) thread 4: duration=50, iteration=3, product=150
(alarm-multiple) thread 3: duration=40, iteration=4, product=160
(alarm-multiple) thread 2: duration=30, iteration=6, product=180
(alarm-multiple) thread 4: duration=50, iteration=4, product=200
(alarm-multiple) thread 3: duration=40, iteration=5, product=200
(alarm-multiple) thread 2: duration=30, iteration=7, product=210
(alarm-multiple) thread 3: duration=40, iteration=6, product=240
(alarm-multiple) thread 4: duration=50, iteration=5, product=250
(alarm-multiple) thread 3: duration=40, iteration=7, product=280
(alarm-multiple) thread 4: duration=50, iteration=6, product=300
(alarm-multiple) thread 4: duration=50, iteration=7, product=350
(alarm-multiple) end


(alarm-zero) begin
(alarm-zero) PASS
(alarm-zero) end


(alarm-negative) begin
(alarm-negative) PASS
(alarm-negative) end



(alarm-simultaneous) begin
(alarm-simultaneous) Creating 3 threads to sleep 5 times each.
(alarm-simultaneous) Each thread sleeps 10 ticks each time.
(alarm-simultaneous) Within an iteration, all threads should wake up on the same tick.
(alarm-simultaneous) iteration 0, thread 0: woke up after 10 ticks
(alarm-simultaneous) iteration 0, thread 1: woke up 0 ticks later
(alarm-simultaneous) iteration 0, thread 2: woke up 0 ticks later
(alarm-simultaneous) iteration 1, thread 0: woke up 10 ticks later
(alarm-simultaneous) iteration 1, thread 1: woke up 0 ticks later
(alarm-simultaneous) iteration 1, thread 2: woke up 0 ticks later
(alarm-simultaneous) iteration 2, thread 0: woke up 10 ticks later
(alarm-simultaneous) iteration 2, thread 1: woke up 0 ticks later
(alarm-simultaneous) iteration 2, thread 2: woke up 0 ticks later
(alarm-simultaneous) iteration 3, thread 0: woke up 10 ticks later
(alarm-simultaneous) iteration 3, thread 1: woke up 0 ticks later
(alarm-simultaneous) iteration 3, thread 2: woke up 0 ticks later
(alarm-simultaneous) iteration 4, thread 0: woke up 10 ticks later
(alarm-simultaneous) iteration 4, thread 1: woke up 0 ticks later
(alarm-simultaneous) iteration 4, thread 2: woke up 0 ticks later
(alarm-simultaneous) end
